
scalable {
  host = "0.0.0.0"
  ports {
    tcp = 6969
  }
}

akka {
  loglevel = "INFO"
  log-dead-letters = 30
  log-dead-letters-during-shutdown = on

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    deployment {
      /statsService/workerRouter {
        router = consistent-hashing-group
        nr-of-instances = 100
        routees.paths = ["/user/statsWorker"]
        cluster {
          enabled = on
          allow-local-routees = on
          use-role = compute
        }
      }

      /userSessionService/partitionRouter {
        router = consistent-hashing-group

        # number of children to create in case of a router;
        # this setting is ignored if routees.paths is given
        # nr-of-instances = 100

        # Maximum number of routees that will be deployed on each cluster
        # member node.
        # Note that nr-of-instances defines total number of routees, but
        # number of routees per node will not be exceeded, i.e. if you
        # define nr-of-instances = 50 and max-nr-of-instances-per-node = 2
        # it will deploy 2 routees per new member in the cluster, up to
        # 25 members.
        # max-nr-of-instances-per-node = 1

        routees.paths = ["/user/userSessionPartition"]
        cluster {
          enabled = on
          allow-local-routees = on
          use-role = service
        }
      }
    }

    persistence {
      journal.plugin = "cassandra-journal"
      snapshot-store.plugin = "cassandra-snapshot-store"
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

    auto-down-unreachable-after = 10s
  }
}

cassandra-journal.keyspace=chat
cassandra-snapshot-store.keyspace=chat_snapshot
